# Install MongoDB on Amazon Linux EC2 Instance
# http://docs.mongodb.org/manual/tutorial/install-mongodb-on-amazon/

# ----------------------------------------------------------------------------------------------------------------------
# 1: configure the package management system (yum)

# 1.A: create the repo directory
# https://docs.chef.io/resource_directory.html
directory "/etc/yum.repos.d" do
    owner 'root'
    group 'root'
    mode '0755'
    action :create
end

# 1.B: create the repo file (from the template file)
# https://docs.chef.io/resource_file.html
# https://docs.chef.io/resource_template.html
template "/etc/yum.repos.d/mongodb-org-3.2.repo" do
    source "install_mongodb-org-3.2.repo.erb"
	owner 'root'
    group 'root'
    mode '0775'
end

# ----------------------------------------------------------------------------------------------------------------------
# 2: install the mongodb packages and associated tools

# 2.A: install package from repo
# https://docs.chef.io/resource_yum.html
yum_package "mongodb-org" do
    action :install
end

# 2.B: create custom mongod config file (from the template file)
# variables pulled from 'node' (stack json) or attributes/default.rb
# https://doc.mongodb.org/manual/reference/configuration-options/
template "/etc/mongod.conf" do
    source "config_mongod.conf.erb"
	owner 'root'
    group 'root'
    mode '0775'
    variables ({
        :dbpath => node["mongodb"]["config"]["dbpath"],
        :logpath => node["mongodb"]["config"]["logpath"],
        :replSet => node["mongodb"]["config"]["replSet"]
    })
end

# ----------------------------------------------------------------------------------------------------------------------
# 3: configure mongodb settings

# 3.A: give mongod permission to files
# data & log directories (everything in /srv/mongodb)
# http://stackoverflow.com/questions/7948789/mongodb-mongod-complains-that-there-is-no-data-db-folder
execute "mongod_permission" do
    command "sudo chown -R mongod:mongod /srv/mongodb"
    #command "sudo chown mongod:mongod /var/run/mongodb/mongod.pid"
    #command "sudo chown -R $USER /srv/mongodb"
end

# 3.B: edit Transparent Huge Pages (THP) Settings
# get rid of mongod startup warning
# http://docs.mongodb.org/manual/reference/transparent-huge-pages/#transparent-huge-pages-thp-settings

# 3.B.1: disable
execute "disable_thp_khugepaged_defrag" do
    command "echo 0 | sudo tee /sys/kernel/mm/transparent_hugepage/khugepaged/defrag" # different b/c file doesn't have options list
end
execute "disable_thp_hugepage_defrag" do
    command "echo 'never > /sys/kernel/mm/transparent_hugepage/defrag' | sudo tee --append /sys/kernel/mm/transparent_hugepage/defrag"
end
execute "disable_thp_hugepage_enables" do
    command "echo 'never > /sys/kernel/mm/transparent_hugepage/enabled' | sudo tee --append /sys/kernel/mm/transparent_hugepage/enabled"
end

# 3.B.2: verify disabled on reboot
template "/etc/rc.local" do
    source "startup_rc.local.erb"
    owner 'root'
    group 'root'
    mode '0775'
end

# ----------------------------------------------------------------------------------------------------------------------
# 4: use upstart & monit to keep mongod alive

# 4.a: create upstart config file to start mongod
# use upstart (/etc/init) instead of default system v (/etc/init.d)
template "/etc/init/mongod.conf" do
    source "upstart_mongod.conf.erb"
	owner 'root'
    group 'root'
    mode '0775'
end

# 4.B: create monit config file for mongod
# similar to .monitrc files for node web applications auto-generated by opsworks
template "/etc/monit.d/mongod.monitrc" do
    source "monit_mongod.monitrc.erb"
	owner 'root'
    group 'root'
    mode '0775'
end

# 4.C: reload monit process to initialize mongod.monitrc
execute "monit_reload" do
    #command "sudo monit reload"
    command "monit reload"
end

# TODO: don't run as root!